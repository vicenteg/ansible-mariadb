---
# tasks file for mariadb
- name: install MariaDB
  become: true
  become_user: root
  yum: name={{item}} state=present
  when: ansible_distribution in ("CentOS", "RedHat", "Amazon")
  environment: '{{proxy_env}}'
  with_items:
    - mariadb-{{mariadb_version}}
    - mariadb-server-{{mariadb_version}}
    - mariadb-libs-{{mariadb_version}}

- name: check whether MariaDB-compat
  command: rpm -q MariaDB-compat
  register: mariadb_compat
  failed_when: mariadb_compat.rc not in (0,1)

- name: install mariadb compat (using rpm since needs --nodeps)
  become: yes
  become_user: root
  command: rpm -U --nodeps http://yum.mariadb.org/{{mariadb_version}}/rhel7-amd64/rpms/MariaDB-{{mariadb_version}}-centos7-x86_64-compat.rpm
  when: mariadb_compat.rc == 1
  environment: '{{proxy_env}}'

- name: link libsasl2 per http://doc.mapr.com/display/components/Hue+Release+Notes#HueReleaseNotes-Hue3.9.0-1510ReleaseNotes
  become: true
  become_user: root
  file: state=link src=/lib64/libsasl2.so.3.0.0 dest=/lib64/libsasl2.so.2 owner=root group=root mode=0644

- name: ensure MariaDB starts on boot
  become: true
  become_user: root
  service: name=mariadb enabled=yes state=started

- name: lock down root user
  mysql_user:
    check_implicit_admin=yes
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    name="{{mysql_root_user}}"
    password="{{mysql_root_password}}"
    host="{{item}}"
    priv="*.*:ALL,GRANT"
  with_items:
    - "localhost"
    - "{{ansible_default_ipv4.address}}"
    - "{{ansible_fqdn}}"
    - "{{ansible_hostname}}"

- name: lock down root user to cluster nodes
  mysql_user:
    check_implicit_admin=yes
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    name="{{mysql_root_user}}"
    password="{{mysql_root_password}}"
    host="{{hostvars[item].ansible_default_ipv4.address}}"
    priv="*.*:ALL,GRANT"
  with_items:
    - '{{groups["cluster"]}}'

- name: lock down root user to cluster nodes
  mysql_user:
    check_implicit_admin=yes
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    name="{{mysql_root_user}}"
    password="{{mysql_root_password}}"
    host="{{hostvars[item].ansible_hostname}}"
    priv="*.*:ALL,GRANT"
  with_items:
    - '{{groups["cluster"]}}'
